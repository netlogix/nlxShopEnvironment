<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="services/data_types.xml" />
        <import resource="services/dumpers.xml" />
        <import resource="services/loaders.xml" />
        <import resource="services/serializer.xml" />
        <import resource="services/cache_cleaners.xml" />
        <import resource="services/resolver.xml" />
    </imports>

    <services>
        <!-- Own logger to log into console -->
        <service
                id="nlx_shop_environment.logger"
                class="Monolog\Logger"
        >
            <argument type="string">nlx_shop_environment_logger</argument>
        </service>
        <service
                id="nlx_shop_environment.logger.handler.console"
                class="Monolog\Handler\PHPConsole"
        >
            <argument type="string">console_handler</argument>
        </service>


        <!-- Helper-Services -->
        <service id="nlx_shop_environment.services.configuration_dumper"
                 class="nlxShopEnvironment\Services\ConfigurationDumper">
            <argument type="service" key="$dataTypeCollector" id="nlx_shop_environment.data_types.data_type_collector" />
        </service>
        <service id="nlx_shop_environment.services.configuration_loader"
                 class="nlxShopEnvironment\Services\ConfigurationLoader">
            <argument type="service" key="$dataTypeCollector" id="nlx_shop_environment.data_types.data_type_collector" />
            <argument type="service" key="$resolver" id="nlx.shop_environment.services.resolver.environment_resolver"/>
        </service>
        <service
                id="nlx_shop_environment.services.shop.shop_entity_relation_helper"
                class="nlxShopEnvironment\Services\Shop\ShopEntityRelationHelper"
        >
            <argument type="service" id="models"/>
        </service>

        <!-- Commands -->
        <service
                id="nlx_shop_environment.commands.shop_environment_dump_config_command"
                class="nlxShopEnvironment\Commands\ShopEnvironmentDumpConfigCommand"
        >
            <argument type="service" id="nlx_shop_environment.services.configuration_dumper"/>
            <tag name="console.command" command="sd:environment:config:dump"/>
        </service>
        <service
                id="nlx_shop_environment.commands.shop_environment_load_config_command"
                class="nlxShopEnvironment\Commands\ShopEnvironmentLoadConfigCommand"
        >
            <argument type="service" id="nlx_shop_environment.services.configuration_loader"/>
            <tag name="console.command" command="sd:environment:config:load"/>
        </service>
        <service
                id="nlx_shop_environment.commands.shop_environment_clear_opcache_command"
                class="nlxShopEnvironment\Commands\ShopEnvironmentClearOpcacheCommand"
        >
            <argument type="service" id="nlx_shop_environment.commands.shop_environment_insecure_guzzle_client" />
            <argument type="service" id="nlx_shop_environment.cache_cleaners.opcache_cleaner" />
            <tag name="console.command" command="sd:environment:opcache:clear"/>
        </service>

        <service id="nlx_shop_environment.commands.shop_environment_insecure_guzzle_client"
                 class="Shopware\Components\HttpClient\GuzzleHttpClient">
            <argument type="service" id="guzzle_http_client_factory"/>
            <argument type="collection">
                <argument type="collection" key="defaults">
                    <argument key="verify">false</argument>
                </argument>
            </argument>
        </service>

        <!-- Factories -->
        <service
                id="nlx_shop_environment.factory.reflrection_class_factory"
                class="nlxShopEnvironment\Factory\ReflectionClassFactory"
        >
        </service>

        <!-- Subscriber -->
        <service id="nlx_shop_environment.subscriber.backendtheme" class="nlxShopEnvironment\Subscriber\BackendTheme">
            <tag name="shopware.event_subscriber" />
        </service>

    </services>
</container>
